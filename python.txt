def func(a,b,c):
    x = 12
    y = 10
    x = x + y
    return x

def Main():
    w = func()
    print(w)



0 DEF func
1 PUSH_LOCAL x
2 LOAD_CONST 12
3 STORE_FAST x
4 PUSH_LOCAL y
5 LOAD_CONST 10
6 STORE_FAST y
7 LOAD_FAST x
8 LOAD_FAST y
9 BINARY_ADD
10 STORE_FAST x
11 LOAD_FAST x
12 RETURN_VALUE
13 DEF Main
14 PUSH_LOCAL w
15 LOAD_GLOBAL func
16 CALL_FUNCTION 0
17 STORE_FAST w
18 LOAD_FAST w
19 LOAD_GLOBAL print
20 CALL_FUNCTION 1

21 END



  2           0 LOAD_CONST               1 (12)
              2 STORE_FAST               0 (x)

  3           4 LOAD_CONST               2 (10)
              6 STORE_FAST               1 (y)

  4           8 LOAD_FAST                0 (x)
             10 LOAD_FAST                1 (y)
             12 BINARY_ADD
             14 STORE_FAST               0 (x)

  5          16 LOAD_FAST                0 (x)
             18 RETURN_VALUE


def func():
    if(5 <= 7):
        print("si")
    else:
        print("no")
    return 5

def Main():
    func()

0 DEF func
1 LOAD_CONST 5
2 LOAD_CONST 7
3 COMPARE_OP >
4 JUMP_IF_FALSE 9
5 LOAD_CONST "si"
6 LOAD_GLOBAL print
7 CALL_FUNCTION 1
8 JUMP_ABSOLUTE 12
9 LOAD_CONST "no"
10 LOAD_GLOBAL print
11 CALL_FUNCTION 1
12 LOAD_CONST 5
13 RETURN_VALUE
14 DEF Main
15 LOAD_GLOBAL func
16 CALL_FUNCTION 0
17 END

  2           0 LOAD_GLOBAL              0 (print)
              2 LOAD_CONST               1 ('si')
              4 CALL_FUNCTION            1
              6 POP_TOP
              8 JUMP_FORWARD             8 (to=18)

  3     >>   10 POP_TOP
             12 LOAD_GLOBAL              0 (print)
             14 LOAD_CONST               2 ('no')
             16 CALL_FUNCTION            1
             18 POP_TOP
             20 LOAD_CONST               0 (None)
             22 RETURN_VALUE

  6           0 LOAD_GLOBAL              1 (func)
              2 CALL_FUNCTION            0
              4 POP_TOP
              6 LOAD_CONST               0 (None)
              8 RETURN_VALUE







